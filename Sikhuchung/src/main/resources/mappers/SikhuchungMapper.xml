<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sikhuchung.mapper.SikhuchungMapper">
    <!-- 공지사항 -->
    <sql id="noticeColumns">
          notice_number
        , user_id
        , notice_title
        , notice_content
        , TO_CHAR(notice_date, 'yyyy-MM-dd') notice_date
        , notice_hit
        , notice_update_id
        , notice_update_date
        , notice_delete
    </sql>
    
    <insert id="insertNotice" parameterType="NoticeDTO">
        INSERT INTO s_notice (
            notice_number
            ,user_id
            ,notice_title
            ,notice_content
            ,notice_date
            ,notice_hit
            ,notice_delete
        ) VALUES (
              sequ_notice_number.nextval
            , #{userId, jdbcType=VARCHAR}
            , #{noticeTitle, jdbcType=VARCHAR}
            , #{noticeContent, jdbcType=VARCHAR}
            , sysdate
            , 0
            , 'N'
        )
    </insert>

    <select id="selectNoticeDetail" parameterType="Long" resultType="NoticeDTO">
        SELECT
            <include refid="noticeColumns" />
        FROM
            s_notice
        WHERE
            notice_delete = 'N'
        AND
            notice_number = #{noticeNumber}
    </select>

    <update id="updateNotice" parameterType="NoticeDTO">
        UPDATE s_notice
        SET
              notice_update_date = sysdate
            , notice_title = #{noticeTitle}
            , notice_content = #{noticeContent}
            , user_id = #{userId}
        WHERE
            notice_number = #{noticeNumber}
    </update>

    <update id="deleteNotice" parameterType="Long">
        UPDATE s_notice
        SET
              notice_delete = 'Y'
        WHERE
            notice_number = #{noticeNumber}
    </update>

    <select id="selectNoticeList" parameterType="NoticeDTO" resultType="NoticeDTO">
        SELECT 
            notice_number
	        , user_id
	        , notice_title
	        , notice_content
	        , TO_CHAR(notice_date, 'yyyy-MM-dd') notice_date
	        , notice_hit
	        , notice_update_id
	        , notice_update_date
	        , notice_delete
            FROM (
                SELECT ROW_NUMBER() OVER (ORDER BY notice_number DESC, notice_date DESC) NUM
                    , A.*
                    FROM S_NOTICE A
                    <where> 
                    <if test="searchKeyword != null and searchKeyword != ''">
			            <choose>
			                <when test="searchType != null and searchType != ''">
			                    <choose>
			                        <when test="'title'.equals(searchType)">
			                            AND notice_title LIKE '%' || #{searchKeyword} || '%'
			                        </when>
			                        <when test="'content'.equals(searchType)">
			                            AND notice_content LIKE '%' || #{searchKeyword} || '%'
			                        </when>
			                        <when test="'writer'.equals(searchType)">
			                            AND user_id LIKE '%' || #{searchKeyword} || '%'
			                        </when>
			                    </choose>
			                </when>
			                <otherwise>
			                    AND
			                        (
			                               notice_title LIKE '%' || #{searchKeyword} || '%'
			                            OR notice_content LIKE '%' || #{searchKeyword} || '%'
			                            OR user_id LIKE '%' || #{searchKeyword} || '%'
			                        )
			                </otherwise>
			            </choose>
			        </if>
			        </where>
                    ORDER BY notice_number DESC,notice_date DESC
                    )
             WHERE NUM BETWEEN #{paginationInfo.firstRecordIndex} AND #{paginationInfo.lastRecordIndex} AND notice_delete = 'N'
    </select>

    <select id="selectNoticeTotalCount" parameterType="NoticeDTO" resultType="int">
        SELECT
            COUNT(*)
        FROM
            s_notice
        WHERE
            notice_delete = 'N'
                    <if test="searchKeyword != null and searchKeyword != ''">
                        <choose>
                            <when test="searchType != null and searchType != ''">
                                <choose>
                                    <when test="'title'.equals(searchType)">
                                        AND notice_title LIKE '%' || #{searchKeyword} || '%'
                                    </when>
                                    <when test="'content'.equals(searchType)">
                                        AND notice_content LIKE '%' || #{searchKeyword} || '%'
                                    </when>
                                    <when test="'writer'.equals(searchType)">
                                        AND user_id LIKE '%' || #{searchKeyword} || '%'
                                    </when>
                                </choose>
                            </when>
                            <otherwise>
                                AND
                                    (
                                           notice_title LIKE '%' || #{searchKeyword} || '%'
                                        OR notice_content LIKE '%' || #{searchKeyword} || '%'
                                        OR user_id LIKE '%' || #{searchKeyword} || '%'
                                    )
                            </otherwise>
                        </choose>
                    </if>
    </select>
    
    <update id="hitPlus" parameterType="long">
        UPDATE s_notice
        SET
            notice_hit = notice_hit+1
        WHERE
            notice_number = #{noticeNumber}    
    </update>
    
    <!-- 후기 -->
    <sql id="reviewColumns">
          review_number
        , order_detail_number
        , review_title
        , review_content
        , TO_CHAR(review_date, 'yyyy-MM-dd') review_date
        , review_rate
        , review_update_date
        , review_delete
    </sql>
    
    <insert id="insertReview" parameterType="ReviewDTO">
        INSERT INTO s_review (
              review_number
	        , review_title
	        , review_content
	        , TO_CHAR(review_date, 'yyyy-MM-dd') review_date
	        , review_rate
	        , review_delete
        ) VALUES (
              #{reviewNumber}
            , #{reviewTitle}
            , #{reviewContent}
            , sysdate
            , 4
            , 'N'
        )
    </insert>

    <select id="selectReviewDetail" parameterType="long" resultType="ReviewDTO">
        SELECT
            <include refid="reviewColumns" />
        FROM
            s_review
        WHERE
            review_delete = 'N'
        AND
            review_number = #{reviewNumber}
    </select>

    <update id="updateReview" parameterType="ReviewDTO">
        UPDATE s_review
        SET
              review_update_date = sysdate
            , review_title = #{reviewTitle}
            , review_content = #{reviewContent}
            , review_rate = #{review_rate}
        WHERE
            review_number = #{reviewNumber}
    </update>

    <update id="deleteReview" parameterType="long">
        UPDATE s_review
        SET
              review_delete = 'Y'
        WHERE
            review_number = #{reviewNumber}
    </update>

    <select id="selectReviewList" parameterType="ReviewDTO" resultType="ReviewDTO">
        SELECT
            <include refid="reviewColumns" />
        FROM
            s_review
        WHERE
            review_delete = 'N'
        ORDER BY
            review_number DESC,
            review_date DESC
    </select>

    <select id="selectReviewTotalCount" parameterType="ReviewDTO" resultType="int">
        SELECT
            COUNT(*)
        FROM
            s_review
        WHERE
            review_delete = 'N'
    </select>
    
    <!-- 회원가입 -->
    <insert id="saveUser" parameterType="UserVO">
        INSERT INTO s_user VALUES(#{uid},#{upw},#{uname},#{uemail},#{utel},#{ugrade},SYSDATE)
    </insert>
    <!-- id중복확인 -->
    <select id="idCheck" resultType="int">
        select count(*) from s_user where user_id = #{userid}
    </select>
    
    
    
</mapper>