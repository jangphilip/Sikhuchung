<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sikhuchung.mapper.SikhuchungMapper">
    <!-- 공지사항 -->
    <sql id="noticeColumns">
          notice_number
        , user_id
        , notice_title
        , notice_content
        , TO_CHAR(notice_date, 'yyyy-MM-dd') notice_date
        , notice_hit
        , notice_update_id
        , notice_update_date
        , notice_delete
    </sql>
    
    <insert id="insertNotice" parameterType="NoticeDTO">
        INSERT INTO s_notice (
            notice_number
            ,user_id
            ,notice_title
            ,notice_content
            ,notice_date
            ,notice_hit
            ,notice_delete
        ) VALUES (
              sequ_notice_number.nextval
            , #{userId, jdbcType=VARCHAR}
            , #{noticeTitle, jdbcType=VARCHAR}
            , #{noticeContent, jdbcType=VARCHAR}
            , sysdate
            , 0
            , 'N'
        )
    </insert>

    <select id="selectNoticeDetail" parameterType="Long" resultType="NoticeDTO">
        SELECT
            <include refid="noticeColumns" />
        FROM
            s_notice
        WHERE
            notice_delete = 'N'
        AND
            notice_number = #{noticeNumber}
    </select>

    <update id="updateNotice" parameterType="NoticeDTO">
        UPDATE s_notice
        SET
              notice_update_date = sysdate
            , notice_title = #{noticeTitle}
            , notice_content = #{noticeContent}
            , user_id = #{userId}
        WHERE
            notice_number = #{noticeNumber}
    </update>

    <update id="deleteNotice" parameterType="Long">
        UPDATE s_notice
        SET
              notice_delete = 'Y'
        WHERE
            notice_number = #{noticeNumber}
    </update>

    <select id="selectNoticeList" parameterType="NoticeDTO" resultType="NoticeDTO">
        <![CDATA[
        SELECT 
            notice_number
	        , user_id
	        , notice_title
	        , notice_content
	        , TO_CHAR(notice_date, 'yyyy-MM-dd') notice_date
	        , notice_hit
	        , notice_update_id
	        , notice_update_date
	        , notice_delete
            FROM (
                SELECT ROW_NUMBER() OVER (ORDER BY notice_number DESC, notice_date DESC) NUM
                    , A.*
                    FROM S_NOTICE A
                    ORDER BY notice_number DESC,notice_date DESC
                    )
             WHERE NUM BETWEEN #{paginationInfo.firstRecordIndex} AND #{paginationInfo.lastRecordIndex} AND notice_delete = 'N'
        ]]>    
    </select>

    <select id="selectNoticeTotalCount" parameterType="NoticeDTO" resultType="int">
        SELECT
            COUNT(*)
        FROM
            s_notice
        WHERE
            notice_delete = 'N'
    </select>
    
    <!-- 메인화면 리스트 불러오기 -->
    <select id="selectProductList" resultType="ProductVO">
    	SELECT
    		product_number, product_name, product_price, product_thumbnail
    	FROM
    		s_product	
    </select>
   
    <!-- 메인화면 선물 불러오기 -->
    <select id="selectPresentList" resultType="ProductVO">
    	SELECT 
    		product_number, product_name, product_price,product_thumbnail 
    	FROM
    		s_product
    	WHERE
    		product_category = '선물'
    </select>
    <!-- 메인화면 간편 불러오기 -->
    <select id="selectSimpleList" resultType="ProductVO">
    	SELECT 
    		product_number, product_name, product_price,product_thumbnail 
    	FROM
    		s_product
    	WHERE
    		product_category = '간편'
    </select>
    <!-- 메인화면 제철 불러오기 -->
    <select id="selectSeasonList" resultType="ProductVO">
    	SELECT 
    		product_number, product_name, product_price,product_thumbnail 
    	FROM
    		s_product
    	WHERE
    		product_category = '제철'
    </select> 
    <!-- 메인화면 별난 불러오기 -->
    <select id="selectWeirdList" resultType="ProductVO">
    	SELECT 
    		product_number, product_name, product_price,product_thumbnail 
    	FROM
    		s_product
    	WHERE
    		product_category = '별난'
    </select>
    
    <!-- 상세화면 불러오기 -->
    <select id="selectProductData" parameterType="int" resultType="ProductVO">
    	SELECT
    		product_number, product_category, product_name, product_price, product_origin, product_delivery, product_stock ,product_info ,product_delete,product_thumbnail ,product_register_date ,product_register, product_update_date ,product_updater
    	FROM
    		s_product where product_number = #{productNumber}
    </select>

    <!-- 회원가입 -->
    <insert id="saveUser" parameterType="UserVO">
        INSERT INTO s_user VALUES(#{user_id},#{user_pw},#{user_name},#{user_email},#{user_tel},#{user_grade},SYSDATE)
    </insert>
    <!-- id중복확인 -->
    <select id="idCheck" resultType="int">
        select count(*) from s_user where user_id = #{userid}
    </select>
    <!-- 로그인 -->
    <select id="userLogin" resultType="int"  parameterType="UserVO">
        select count(*) from s_user where user_id = #{user_id} and user_pw = #{user_pw}
    </select>
    <!-- 아이디찾기 -->
    <select id="findIdCheck" resultType="String" parameterType="UserVO">
        select user_id from s_user where user_name = #{user_name} and user_email= #{user_email}
    </select>
    <!-- 비밀번호찾기 -->
    <select id="findPwCheck" resultType="String" parameterType="UserVO">
        select user_pw from s_user where user_id = #{user_id} and user_name= #{user_name}
    </select>
    
    <update id="hitPlus" parameterType="long">
        UPDATE s_notice
        SET
            notice_hit = notice_hit+1
        WHERE
            notice_number = #{noticeNumber}    
    </update>
    
    <!-- 후기 -->
    
</mapper>